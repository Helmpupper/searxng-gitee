// In fiist place, Reset all browser default styles
@forward './reset.scss';

// Then, import all the definitions
@use './definitions.scss' as *;

// Then, import all the mixins
$dir: ltr !default;
@forward './mixins.scss' with ($dir: $dir !default);
@use './mixins.scss' as mixin;

// CSS Color varables
@use 'colors';

// Button
@use 'button';

@function toPx($value) {
    @return $value * 16px;
}

%link-button {
    display: inline-block;
    padding: .5rem 1rem;
    background-color: var(--primary-color);
    color: var(--filled-text-color);
    @include mixin.rounded(full)
}

br {
    height: 1rem;
    width: 100%;
    display: block;
    content: " ";
}

body {
    display: flex;
    gap: 0;
    overflow: hidden;
    transition: gap 250ms ease-in-out,
        padding 500ms ease-in-out background-color 300ms ease-in-out;

    background-color: var(--secondary-background-color);

    .body-container {
        flex: 3;
        background-color: var(--secondary-background-color);
        color: var(--text-color);
        @include mixin.rounded();
    }
}


*:focus-visible {
    outline: 3px solid var(--primary-color);
    outline-offset: .1rem;
}

.icon-big {
    width: 4rem;
}

.icon {
    width: 2.25rem;
}

.icon-small {
    width: 1.5rem;
}

.body-container {
    display: grid;
    grid-template-rows: auto 1fr auto;
    grid-template-columns: 1fr;
    grid-template-areas:
        "header"
        "main"
        "footer";
    height: 100svh;
    overflow: hidden;
    transition: height 100ms ease-in-out;

    footer {
        grid-area: footer;
    }

    main {
        grid-area: main;
    }
}

#index,
#None {
    main {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
}

// 404 page

main:has(.not-found) {
    .background {
        font-size: 60vh;
        color: var(--primary-color);
        opacity: .5;
        position: absolute;
        pointer-events: none;
    }

    h1 {
        z-index: 1;
        font-size: 3rem;
        text-align: center;
        margin: 1rem 0;
    }

    .button {
        z-index: 1;
        @extend %link-button;
    }
}


#index {
    header {
        grid-area: header;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 2rem;

        .logo {
            font-size: 2rem;
            display: block;
            text-align: center;

            img {
                max-width: clamp(70px, 25vw, 150px);
            }
        }

        .links {
            display: flex;
            gap: .5rem;

            .link {
                display: inline-block;
                padding: 0.5rem;
                height: min-content;
                @include mixin.rounded(full);
                transition: background-color 100ms ease-in-out;

                &:is(:hover, :focus-within) {
                    background-color: var(--secondary-background-color);
                }

                svg {
                    width: 1.5rem;
                }

                &.config {
                    transition: transform 1s ease-in-out;
                }
            }
        }
    }
}

body:has(.sidebar_btn[open]) {
    padding: .5rem;
    gap: .5rem;
    background-color: var(--background-color);

    #sidebar {
        flex: 1;
        min-width: $screen-xs;
        border-width: 5px;

        &>.container {
            @include mixin.margin-left(0);
            transition: margin-left 150ms ease-in-out 100ms;
        }
    }

    #index {
        height: calc(100svh - 1rem);
    }

    header .links .link.config {
        background-color: var(--secondary-background-color);
        transform: rotate(60deg);
    }

}

#sidebar {
    flex: 0;
    min-width: 0;
    @include mixin.rounded();
    overflow: hidden;
    background: var(--secondary-background-color);
    border: var(--secondary-background-color) solid;
    border-width: 0;
    transition: flex 300ms ease-in-out,
        min-width 300ms ease-in-out;
    position: relative;

    &>.container {
        width: 100%;
        height: 100%;
        overflow-y: auto;
        position: absolute;
        min-width: $screen-xs - toPx(2);
        padding: 1rem;
        @include mixin.margin-left(50rem);
        transition: margin-left 50ms ease-in-out;

        :is(button, .btn) {
            margin-bottom: .5rem;
        }

        h1 {
            font-size: 1.5rem;
            padding: .25rem 0;
            text-align: center;
            background-color: var(--background-color);
            color: var(--text-color);
            @include mixin.rounded(full);
        }

        fieldset {
            padding: .5rem 0;

            .container {
                display: flex;
                padding: 0 .5rem;
                justify-content: space-between;
                align-items: center;
                flex-wrap: wrap;
                gap: .5rem;

                select {
                    padding: .5rem 1rem;
                    background-color: var(--background-color);
                    color: var(--text-color);
                    @include mixin.rounded(sm);
                    max-width: 250px;
                }
            }

            .description {
                margin: .5rem;
                text-align: justify;
                color: var(--text-color);
                font-size: .8rem;
            }
        }

        .about {
            padding: .5rem;

            p {
                text-align: justify;
                font-size: .8rem;
            }

            ul {
                padding-left: 1rem;

                li {
                    margin: .5rem 0;
                }
            }
        }
    }
}

footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    gap: 1rem;
    flex-wrap: wrap;

    @include mixin.max-screens($screen-md) {
        justify-content: center;
    }

    .links {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        justify-content: center;

        a {
            @extend %link-button;
        }
    }
}

#search {
    #search_categories .categories {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;

        @include mixin.max-screens($screen-md) {
            transform: scale(0.8);
        }

        @include mixin.max-screens($screen-sm) {
            display: none;
        }

        label:nth-child(1) .category-icon {
            background-color: #32e258;
        }

        label:nth-child(2) .category-icon {
            background-color: #2196f3;
        }

        label:nth-child(3) .category-icon {
            background-color: #e49928;

        }

        label:nth-child(4) .category-icon {
            background-color: #5b2ae0;

        }

        label:nth-child(5) .category-icon {
            background-color: #ff0000;

        }

        label {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.5rem;
            padding: 1rem;
            height: 100%;
            cursor: pointer;
            @include mixin.rounded();

            .category-icon {
                padding: 1rem;
                @include mixin.rounded(full);

                svg {
                    color: #fff;
                }
            }

            &:has(input:checked) {
                background-color: var(--background-color);
            }
        }
    }

    .search_box {
        background-color: var(--background-color);
        padding: .5rem;
        width: clamp(400px, 50vw, 40rem);
        @include mixin.rounded(full);
        margin-top: 1rem;
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;

        @include mixin.max-screens($screen-sm) {
            width: 70vw;
            @include mixin.rounded();
        }


        input {
            flex: 1;
            background-color: transparent;
            border: none;
            color: var(--text-color);
            @include mixin.rounded(full);
            padding: .5rem;


            &:focus {
                outline: none;
            }
        }

        button {
            background-color: transparent;
            border: none;
            color: var(--text-color);
            @include mixin.rounded(full);
            padding: .5rem;

            &:focus {
                outline: none;
            }
        }

        #clear_search {
            background-color: transparent;
            border: none;
            color: var(--text-color);
            @include mixin.rounded(full);
            padding: .5rem;

            &:focus {
                outline: none;
            }
        }

        #send_search {
            background-color: var(--primary-color);
            color: var(--filled-text-color);
            @include mixin.rounded(full);
            padding: 0 1rem;

            &:focus {
                outline: none;
            }
        }
    }
}

input[type="checkbox"].switch {
    appearance: none;
    margin-right: .5rem;
    background-color: var(--secondary-background-color);
    color: var(--text-color);
    @include mixin.rounded(sm);
    width: 40px;
    height: 20px;
    min-height: 20px;
    display: inline-block;
    position: relative;
    border: 1px solid var(--border-color);
    box-sizing: border-box;
    transition: background-color 200ms ease-in-out;

    &::after {
        content: "";
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        @include mixin.left(2.5px);
        width: 15px;
        height: 15px;
        background-color: var(--text-color);
        @include mixin.rounded(sm);
        transition: background-color 200ms ease-in-out,
            left 200ms ease-in-out,
            right 200ms ease-in-out;
    }

    &:checked {
        background-color: var(--primary-color);

        &::after {
            background-color: var(--filled-text-color);
            @include mixin.left(calc(100% - 17.5px));
        }
    }
}

@media (scripting: none) {
    .js-only {
        display: none !important;
    }

    .js-alt {
        display: inherit;
    }
}

@media (scripting: enabled) {
    .js-alt {
        display: none !important;
    }
}